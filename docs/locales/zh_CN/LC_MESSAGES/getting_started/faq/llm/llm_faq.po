# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, csunny
# This file is distributed under the same license as the DB-GPT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DB-GPT 👏👏 0.3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-28 15:05+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../getting_started/faq/llm/llm_faq.md:1 35c867af1c9c4d52a26c35f6a77af4b8
msgid "LLM USE FAQ"
msgstr "LLM模型使用FAQ"

#: ../../getting_started/faq/llm/llm_faq.md:3 302d2be76da0463db7ef7b5002ca6bb1
msgid "Q1:how to use openai chatgpt service"
msgstr "我怎么使用OPENAI服务"

#: ../../getting_started/faq/llm/llm_faq.md:4 4d7790aa3cdb4cfcb2360bbb2b136d6e
msgid "change your LLM_MODEL"
msgstr "通过在.env文件设置LLM_MODEL"

#: ../../getting_started/faq/llm/llm_faq.md:9 90b7622f45ef4701aab2c0aaaf52f900
msgid "set your OPENAPI KEY"
msgstr "set your OPENAPI KEY"

#: ../../getting_started/faq/llm/llm_faq.md:15 67c1e41b57fe460c970bde38327db787
msgid "make sure your openapi API_KEY is available"
msgstr "确认openapi API_KEY是否可用"

#: ../../getting_started/faq/llm/llm_faq.md:17 c7941e083ef246ae9dc70b6e49315184
msgid ""
"Q2 What difference between `python dbgpt_server --light` and `python "
"dbgpt_server`"
msgstr "Q2 `python dbgpt_server --light` 和 `python "
"dbgpt_server`的区别是什么?"

#: ../../getting_started/faq/llm/llm_faq.md:19 23e2459b5ac74830b22b1b86dfa85297
msgid ""
"`python dbgpt_server --light` dbgpt_server does not start the llm "
"service. Users can deploy the llm service separately by using `python "
"llmserver`, and dbgpt_server accesses the llm service through set the "
"LLM_SERVER environment variable in .env. The purpose is to allow for the "
"separate deployment of dbgpt's backend service and llm service."
msgstr "`python dbgpt_server --light` dbgpt_server在启动后台服务的时候不启动模型服务, 用户可以通过`python llmserver`单独部署模型服务，dbgpt_server通过LLM_SERVER环境变量来访问模型服务。目的是为了可以将dbgpt后台服务和大模型服务分离部署。"

#: ../../getting_started/faq/llm/llm_faq.md:21 4169f2294921469383c25cc8ae4ea83d
msgid ""
"`python dbgpt_server` dbgpt_server service and the llm service are "
"deployed on the same instance. when dbgpt_server starts the service, it "
"also starts the llm service at the same time."
msgstr "`python dbgpt_server` 是将后台服务和模型服务部署在同一台实例上.dbgpt_server在启动服务的时候同时开启模型服务."

#: ../../getting_started/faq/llm/llm_faq.md:25 56b8dcd2d2d44403a0aca00f7452b92c
#, fuzzy
msgid "Q3 how to use MultiGPUs"
msgstr "Q2 怎么使用 MultiGPUs"

#: ../../getting_started/faq/llm/llm_faq.md:26 9d02946ea8d54f11a2600278afc07ab6
msgid ""
"DB-GPT will use all available gpu by default. And you can modify the "
"setting `CUDA_VISIBLE_DEVICES=0,1` in `.env` file to use the specific gpu"
" IDs."
msgstr "DB-GPT默认加载可利用的gpu，你也可以通过修改 在`.env`文件 `CUDA_VISIBLE_DEVICES=0,1`来指定gpu IDs"

#: ../../getting_started/faq/llm/llm_faq.md:28 cf26d432a34d4b2482bcc5255f01f9b1
msgid ""
"Optionally, you can also specify the gpu ID to use before the starting "
"command, as shown below:"
msgstr "你也可以指定gpu ID启动"

#: ../../getting_started/faq/llm/llm_faq.md:38 e105136f3fea42c78338f17d671a578c
msgid ""
"You can modify the setting `MAX_GPU_MEMORY=xxGib` in `.env` file to "
"configure the maximum memory used by each GPU."
msgstr "同时你可以通过在.env文件设置`MAX_GPU_MEMORY=xxGib`修改每个GPU的最大使用内存"

#: ../../getting_started/faq/llm/llm_faq.md:40 69d02c9004ec4b10a5fe0712a6dc6e9b
#, fuzzy
msgid "Q4 Not Enough Memory"
msgstr "Q3 机器显存不够 "

#: ../../getting_started/faq/llm/llm_faq.md:42 c3333f6cb608451182d4807fcb9c2d78
msgid "DB-GPT supported 8-bit quantization and 4-bit quantization."
msgstr "DB-GPT 支持 8-bit quantization 和 4-bit quantization."

#: ../../getting_started/faq/llm/llm_faq.md:44 01568d7dc96a42dd84d1c1e76ea44186
msgid ""
"You can modify the setting `QUANTIZE_8bit=True` or `QUANTIZE_4bit=True` "
"in `.env` file to use quantization(8-bit quantization is enabled by "
"default)."
msgstr "你可以通过在.env文件设置`QUANTIZE_8bit=True` or `QUANTIZE_4bit=True`"

#: ../../getting_started/faq/llm/llm_faq.md:46 7e4682b7992b40d7b18801c9ce4c17b6
msgid ""
"Llama-2-70b with 8-bit quantization can run with 80 GB of VRAM, and 4-bit"
" quantization can run with 48 GB of VRAM."
msgstr ""
"Llama-2-70b with 8-bit quantization 可以运行在 80 GB VRAM机器， 4-bit "
"quantization可以运行在 48 GB VRAM"

#: ../../getting_started/faq/llm/llm_faq.md:48 9be65b2cac2541f0aeac21cf36441350
msgid ""
"Note: you need to install the latest dependencies according to "
"[requirements.txt](https://github.com/eosphoros-ai/DB-"
"GPT/blob/main/requirements.txt)."
msgstr ""
