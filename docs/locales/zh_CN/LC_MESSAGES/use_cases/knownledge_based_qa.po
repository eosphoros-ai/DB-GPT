# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, csunny
# This file is distributed under the same license as the DB-GPT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DB-GPT 0.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-13 15:39+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#~ msgid "Knownledge based qa"
#~ msgstr "知识问答"

#~ msgid ""
#~ "Chat with your own knowledge is a"
#~ " very interesting thing. In the usage"
#~ " scenarios of this chapter, we will"
#~ " introduce how to build your own "
#~ "knowledge base through the knowledge "
#~ "base API. Firstly, building a knowledge"
#~ " store can currently be initialized "
#~ "by executing \"python tool/knowledge_init.py\" "
#~ "to initialize the content of your "
#~ "own knowledge base, which was introduced"
#~ " in the previous knowledge base "
#~ "module. Of course, you can also "
#~ "call our provided knowledge embedding "
#~ "API to store knowledge."
#~ msgstr ""
#~ "用自己的知识聊天是一件很有趣的事情。在本章的使用场景中，我们将介绍如何通过知识库API构建自己的知识库。首先，构建知识存储目前可以通过执行“python"
#~ " "
#~ "tool/knowledge_init.py”来初始化您自己的知识库的内容，这在前面的知识库模块中已经介绍过了。当然，你也可以调用我们提供的知识嵌入API来存储知识。"

#~ msgid ""
#~ "We currently support many document "
#~ "formats: txt, pdf, md, html, doc, "
#~ "ppt, and url."
#~ msgstr "“我们目前支持四种文件格式: txt, pdf, url, 和md。"

#~ msgid ""
#~ "Now we currently support vector "
#~ "databases:  Chroma (default) and Milvus. "
#~ "You can switch between them by "
#~ "modifying the \"VECTOR_STORE_TYPE\" field in"
#~ " the .env file."
#~ msgstr "“我们目前支持向量数据库:Chroma(默认)和Milvus。你可以通过修改.env文件中的“VECTOR_STORE_TYPE”参数在它们之间切换。"

#~ msgid "Below is an example of using the knowledge base API to query knowledge:"
#~ msgstr "下面是一个使用知识库API进行查询的例子:"
